/* Icon font setup: http://jaydenseric.com/blog/font-icons-like-a-boss-with-sass-and-font-custom */
// Unfortunately the long way: https://github.com/FontCustom/fontcustom/issues/186
@font-face {
  font-family: "timbleicons";
  src:    url("../fonts/icons/timbleicons.eot");
  src:    url("../fonts/icons/timbleicons.eot?#iefix") format("embedded-opentype"),
  url("../fonts/icons/timbleicons.woff") format("woff"),
  url("../fonts/icons/timbleicons.ttf") format("truetype"),
  url("../fonts/icons/timbleicons.svg#timbleicons") format("svg");
  font-weight: normal;
  font-style: normal;
}
@media screen and (-webkit-min-device-pixel-ratio: 0) {
  @font-face {
    font-family: "timbleicons";
    src: url("../fonts/timbleicons/timbleicons.svg#timbleicons") format("svg");
  }
}

// Sass map containing icon names and CSS content values
$icons: (
    bars: "\f100",
    book: "\f101",
    calendar: "\f102",
    code: "\f103",
    console: "\f104",
    earth: "\f105",
    file: "\f106",
    flag: "\f107",
    github: "\f108",
    globe: "\f109",
    html5: "\f10a",
    joomla: "\f10b",
    laptop: "\f10c",
    linkedin: "\f10d",
    location: "\f10e",
    loop: "\f10f",
    mug: "\f110",
    nooku-logo: "\f111",
    pencil: "\f112",
    tablet: "\f113",
    tree: "\f114",
    twitter: "\f115",
    users: "\f116",
);

/* Font icon pseudo-element base styles */
%icon {
  speak: none;
  text-rendering: optimizeLegibility;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  text-transform: none;
  line-height: 1;
  font: {
    style: normal;
    variant: normal;
    weight: normal;
    family: 'timbleicons';
  }

  &:before {
    display: inline-block;
    margin: auto;
  }
}


// Creating classnames of all icons
@each $name, $icon in $icons {
  .icon-jt-#{$name} {
    &:before {
      content: "#{$icon}";
      @extend %icon;
    }
  }
}


// For adding icons to elements using CSS pseudo-elements
@mixin icon-before($icon: false, $styles: false) {
  &:before {
    @if $icon {
      content: "#{map-get($icons, $icon)}";
    }
    @if $styles {
      @extend %icon;
    }
    @content;
  }
}
@mixin icon-after($icon: false, $styles: false) {
  &:after {
    @if $icon {
      content: "#{map-get($icons, $icon)}";
    }
    @if $styles {
      @extend %icon;
    }
    @content;
  }
}
@mixin icon-both($icon: false, $styles: false) {
  &:before,
  &:after {
    @if $icon {
      content: "#{map-get($icons, $icon)}";
    }
    @if $styles {
      @extend %icon;
    }
    @content;
  }
}